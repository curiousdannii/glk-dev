!% $MAX_DYNAMIC_STRINGS=96

Constant Story "DynamicStringTest";
Constant Headline "Not a game.^";

! A game that uses all 96 dynamic strings available in Z-code.

Release 1;

#ifdef TARGET_ZCODE;
Constant HDR_GAMERELEASE      = $02;     ! word
Constant HDR_GAMESERIAL       = $12;     ! six ASCII characters
#ifnot;
Global gg_mainwin;
Constant HDR_GLULXVERSION  $04;     ! long word
Constant ROM_GAMERELEASE   $34;     ! short word
Constant ROM_GAMESERIAL    $36;     ! six ASCII characters
#endif; ! TARGET_GLULX

!Global failures;

[ Main;
    #ifdef TARGET_GLULX;
	@setiosys 2 0;
	@push 201; @push 3; @push 0; @push 0; @push 0;
	@glk $0023 5 gg_mainwin;

	@push gg_mainwin;
	@glk $002F 1 0;
    #endif; ! TARGET_GLULX

	Banner();
	new_line;
	RunTest();
];

[ Banner  ix;
    if (Story ~= 0) {
        #ifdef TARGET_ZCODE;
        #ifV5; style bold; #Endif;
        print (string) Story;
        #ifV5; style roman; #Endif;
        #ifnot; ! TARGET_GLULX;
        glk($0086, 3); ! set header style
        print (string) Story;
        glk($0086, 0); ! set normal style
        #Endif; ! TARGET_
    }
    if (Headline ~= 0) print ": ", (string) Headline;
    #ifdef TARGET_ZCODE;
    print "Release ", (HDR_GAMERELEASE-->0) & $03ff, " / Serial number ";
    for (ix=0 : ix<6 : ix++) print (char) HDR_GAMESERIAL->ix;
    #ifnot; ! TARGET_GLULX;
    print "Release ";
    @aloads ROM_GAMERELEASE 0 ix;
    print ix;
    print " / Serial number ";
    for (ix=0 : ix<6 : ix++) print (char) ROM_GAMESERIAL->ix;
    #Endif; ! TARGET_
    print " / Inform v"; inversion;
    print ", compiler options ";
    ix = false;
    #ifdef STRICT_MODE;
    print "S"; ix++;
    #Endif; ! STRICT_MODE
    #ifdef INFIX;
    print "X"; ix++;
    #ifnot;
    #ifdef DEBUG;
    print "D"; ix++;
    #Endif; ! DEBUG
    #Endif; ! INFIX
    if (~~ix) print "(none)";
    new_line;

    #ifdef TARGET_GLULX;
    @gestalt 1 0 ix;
    print "Interpreter version ", ix / $10000, ".", (ix & $FF00) / $100,
    ".", ix & $FF, " / ";
    @gestalt 0 0 ix;
    print "VM ", ix / $10000, ".", (ix & $FF00) / $100, ".", ix & $FF, " / ";
    ix = HDR_GLULXVERSION-->0;
    print "game file format ", ix / $10000, ".", (ix & $FF00) / $100, ".", ix & $FF, "^";
    #Endif; ! TARGET_GLULX
];

#ifdef TARGET_ZCODE;
Lowstring ODYSSEUS "Odysseus";
#endif; ! TARGET_ZCODE

[ RunTest val;
	print "Unset strings: 0='@00', 1='@01', 32='@32', 95='@95'.^";
	
	FillDynamic96();
	print "Set strings: 0='@00', 1='@01', 32='@32', 95='@95'.^";

	string 0 "xyzzy";
	string 95 "yoho";
	val = 32;
	string val "plugh";
	print "Updated strings: 0='@00', 1='@01', 32='@32', 95='@95'.^";

	#ifdef TARGET_ZCODE;
	string 95 ODYSSEUS;
	print "Z-code only: setting 95 to ", (address) (ODYSSEUS*2), ":^";
	print "More strings: 0='@00', 1='@01', 32='@32', 95='@95'.^";
	#endif; ! TARGET_ZCODE
];

[ FillDynamic96;
	string 0 "zero";
	string 1 "one";
	string 2 "two";
	string 3 "three";
	string 4 "four";
	string 5 "five";
	string 6 "six";
	string 7 "seven";
	string 8 "eight";
	string 9 "nine";
	string 10 "ten";
	string 11 "eleven";
	string 12 "twelve";
	string 13 "thirteen";
	string 14 "fourteen";
	string 15 "fifteen";
	string 16 "sixteen";
	string 17 "seventeen";
	string 18 "eighteen";
	string 19 "nineteen";
	string 20 "twenty";
	string 21 "twentyone";
	string 22 "twentytwo";
	string 23 "twentythree";
	string 24 "twentyfour";
	string 25 "twentyfive";
	string 26 "twentysix";
	string 27 "twentyseven";
	string 28 "twentyeight";
	string 29 "twentynine";
	string 30 "thirty";
	string 31 "thirtyone";
	string 32 "thirtytwo";

	! Beyond this point we just hit a sampling.

	string 40 "forty";
	string 50 "fifty";
	string 60 "sixty";
	string 70 "seventy";
	string 80 "eighty";
	string 90 "ninety";
	string 95 "ninetyfive";
];

